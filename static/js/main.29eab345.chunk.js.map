{"version":3,"sources":["components/todos/todosElement/TodosElement.jsx","redux/store.js","components/todos/todosList/TodosList.jsx","components/todos/Todos.jsx","components/app/App.jsx","index.js"],"names":["TodosElement","props","todo","editTodo","completeTodo","deleteTodo","inputRef","useRef","motion","li","initial","x","transition","type","duration","animate","whileHover","scale","exit","backgroundColor","className","ref","disabled","defaultValue","item","onKeyPress","e","id","value","which","current","edit","button","whileTap","onClick","focus","completed","style","color","todosSlice","createSlice","name","initialState","todos","filter","reducers","addNewTodo","state","action","payload","map","actions","store","configureStore","mapDispatchToProps","connect","useState","sort","setSort","AnimatePresence","length","setTodo","onChange","target","handleChange","toast","error","uuid","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","App","h1","y","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29eab345.chunk.js","sourcesContent":["import React, {useRef} from 'react';\r\nimport {motion} from \"framer-motion\";\r\nimport \"./TodoElement.scss\"\r\nimport {AiFillEdit, IoCheckmarkDoneSharp, IoClose} from \"react-icons/all\";\r\n\r\nfunction TodosElement(props) {\r\n    const {todo, editTodo, completeTodo, deleteTodo} = props;\r\n    const inputRef = useRef(true)\r\n\r\n    const textAreaChangeFocus = () => {\r\n        inputRef.current.disabled = false;\r\n        inputRef.current.focus()\r\n    }\r\n\r\n    const edit = (id, value, e) => {\r\n        if (e.which === 13) { // key code of \"Enter\"\r\n            editTodo({id, item: value});\r\n            inputRef.current.disabled = true\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <motion.li\r\n                initial={{x: \"150vw\", transition: {type: \"spring\", duration: 1.5}}}\r\n                animate={{x: \"0\", transition: {type: \"spring\", duration: 1.5}}}\r\n                whileHover={{scale: 0.9, transition: {type: \"spring\", duration: 0.25}}}\r\n                exit={{x: \"-60vw\", scale: [1, 0], transition: {type: \"spring\", duration: 0.5, backgroundColor: \"rgba(255, 0, 0, 1)\"}}}\r\n                key={todo.id}\r\n                className=\"tasks__item\">\r\n                <textarea\r\n                    className=\"item__text\"\r\n                    ref={inputRef}\r\n                    disabled={inputRef}\r\n                    defaultValue={todo.item}\r\n                    onKeyPress={(e) => edit(todo.id, inputRef.current.value, e)}\r\n                />\r\n                <div className=\"item__btn-box\">\r\n                    <motion.button\r\n                        whileHover={{scale: 1.1}}\r\n                        whileTap={{scale: 0.9}}\r\n                        className=\"item__btn\"\r\n                        onClick={() => textAreaChangeFocus()}\r\n                    >\r\n                        <AiFillEdit/>\r\n                     </motion.button>\r\n\r\n                    {todo.completed === false && (\r\n                        <motion.button\r\n                            whileHover={{scale: 1.1}}\r\n                            whileTap={{scale: 0.9}}\r\n                            className=\"item__btn\"\r\n                            style={{color: \"green\"}}\r\n                            onClick={() => completeTodo(todo.id)}\r\n                        >\r\n                            <IoCheckmarkDoneSharp/>\r\n                        </motion.button>\r\n                    )}\r\n\r\n                    <motion.button\r\n                        whileHover={{scale: 1.1}}\r\n                        whileTap={{scale: 0.9}}\r\n                        className=\"item__btn\"\r\n                        style={{color: \"red\"}}\r\n                        onClick={() => deleteTodo(todo.id)}\r\n                    >\r\n                        <IoClose/>\r\n                    </motion.button>\r\n                </div>\r\n                {todo.completed && <span className=\"completed\">Done</span>}\r\n            </motion.li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodosElement;","import {configureStore, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst todosSlice = createSlice({\r\n    name: \"todos\",\r\n    initialState: {todos: [], filter: \"\"},\r\n    reducers: {\r\n        addNewTodo: (state, action) => ({\r\n            ...state, todos: [...state.todos, action.payload]\r\n        }),\r\n        deleteTodo: (state, action) => ({\r\n            ...state, todos: [...state.todos.filter(todo => todo.id !== action.payload)]\r\n        }),\r\n        editTodo: (state, action) => ({\r\n            ...state, todos: [...state.todos.map(todo => {\r\n                if (todo.id === action.payload.id) {\r\n                    return {...todo, item: action.payload.item}\r\n                }\r\n                return todo\r\n            })]\r\n        }),\r\n        completeTodo: (state, action) => ({\r\n            ...state, todos: [...state.todos.map(todo => {\r\n                if (todo.id === action.payload) {\r\n                    return {...todo, completed: true}\r\n                }\r\n                return todo\r\n            })]\r\n        }),\r\n    }\r\n})\r\n\r\nexport const {addNewTodo, deleteTodo, editTodo, completeTodo} = todosSlice.actions;\r\n\r\nconst store = configureStore(todosSlice)\r\n\r\nexport default store;","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\"\r\nimport {AnimatePresence, motion} from \"framer-motion\";\r\nimport TodosElement from \"../todosElement/TodosElement\";\r\nimport {addNewTodo, completeTodo, deleteTodo, editTodo} from \"../../../redux/store\";\r\nimport \"./TodosList.scss\"\r\n\r\nfunction TodosList(props) {\r\n    const [sort, setSort] = useState(\"active\")\r\n    return (\r\n        <div className=\"tasks\">\r\n            <div className=\"tasks__filter\">\r\n                <motion.button\r\n                    whileHover={{scale: 1.1}}\r\n                    whileTap={{scale: 0.9}}\r\n                    onClick={() => setSort(\"active\")}\r\n                >\r\n                    Active\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                    whileHover={{scale: 1.1}}\r\n                    whileTap={{scale: 0.9}}\r\n                    onClick={() => setSort(\"completed\")}\r\n                >\r\n                    Completed\r\n                </motion.button>\r\n\r\n                <motion.button\r\n                    whileHover={{scale: 1.1}}\r\n                    whileTap={{scale: 0.9}}\r\n                    onClick={() => setSort(\"all\")}\r\n                >\r\n                    All\r\n                </motion.button>\r\n            </div>\r\n            <ul className=\"tasks__list list\">\r\n                <AnimatePresence>\r\n                    {props.todos.length > 0 && sort === \"active\"\r\n                        ? props.todos.map(todo => {\r\n                            return (\r\n                                todo.completed === false &&\r\n                                <TodosElement\r\n                                    key={todo.id}\r\n                                    todo={todo}\r\n                                    deleteTodo={props.deleteTodo}\r\n                                    editTodo={props.editTodo}\r\n                                    completeTodo={props.completeTodo}\r\n                                />\r\n                            )\r\n                        })\r\n                        : null}\r\n\r\n                    {props.todos.length > 0 && sort === \"completed\"\r\n                        ? props.todos.map(todo => {\r\n                            return (\r\n                                todo.completed === true &&\r\n                                <TodosElement\r\n                                    key={todo.id}\r\n                                    todo={todo}\r\n                                    deleteTodo={props.deleteTodo}\r\n                                    editTodo={props.editTodo}\r\n                                    completeTodo={props.completeTodo}\r\n                                />\r\n                            )\r\n                        })\r\n                        : null}\r\n\r\n                    {props.todos.length > 0 && sort === \"all\"\r\n                        ? props.todos.map(todo => {\r\n                            return (\r\n                                <TodosElement\r\n                                    key={todo.id}\r\n                                    todo={todo}\r\n                                    deleteTodo={props.deleteTodo}\r\n                                    editTodo={props.editTodo}\r\n                                    completeTodo={props.completeTodo}\r\n                                />\r\n                            )\r\n                        })\r\n                        : null}\r\n                </AnimatePresence>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {addNewTodo, deleteTodo, editTodo, completeTodo}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosList);","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\"\r\nimport {v4 as uuid} from 'uuid';\r\nimport {GoPlus} from \"react-icons/go\"\r\nimport {motion} from \"framer-motion\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport TodosList from \"./todosList/TodosList\";\r\nimport {addNewTodo, completeTodo, deleteTodo, editTodo} from \"../../redux/store\";\r\nimport \"./Todos.scss\"\r\n\r\nfunction Todos(props) {\r\n    const [todo, setTodo] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setTodo(e.target.value)\r\n    }\r\n\r\n    const add = () => {\r\n       if(todo === \"\") {\r\n           toast.error(\"Enter correct value\")\r\n       }else {\r\n           props.addNewTodo({\r\n               id: uuid(),\r\n               item: todo,\r\n               completed: false,\r\n           })\r\n       }\r\n        setTodo(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"addTodos__box\">\r\n                <input type=\"text\" value={todo} onChange={e => handleChange(e)} className=\"addTodos__input\"/>\r\n                <motion.button\r\n                    whileHover={{scale: 1.1}}\r\n                    whileTap={{scale: 0.9}}\r\n                    className=\"addTodos__btn\"\r\n                    onClick={add}\r\n                >\r\n                    <GoPlus />\r\n                </motion.button>\r\n            </div>\r\n            <TodosList/>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {addNewTodo, deleteTodo, editTodo, completeTodo}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import {motion} from \"framer-motion\";\r\nimport \"./App.css\"\r\nimport Todos from \"../todos/Todos\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <motion.h1\r\n                className=\"App__title\"\r\n                initial={{y: -200}}\r\n                animate={{y: 0}}\r\n                transition={{type: \"spring\", duration: 1}}\r\n                whileHover={{scale: 1.1}}\r\n            >\r\n                To do App\r\n            </motion.h1>\r\n            <motion.div\r\n                initial={{y: 1000}}\r\n                animate={{y: 0}}\r\n                transition={{type: \"spring\", duration: 1.5}}\r\n            >\r\n                <Todos/>\r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {Provider} from \"react-redux\";\nimport App from \"./components/app/App\"\nimport store from \"./redux/store\";\nimport \"./styles/base.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}